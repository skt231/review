<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	<beans:bean id="loginSuccess"
		class="com.booking.handler.LoginRedirectHandler" />
	<beans:bean id="bcryptPasswordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	<http use-expressions="true" create-session="ifRequired">

		<intercept-url pattern="/**" access="permitAll" />
		<intercept-url pattern="/manager/**"
			access="hasAnyRole('ROLE_MANAGER')" />
		<intercept-url pattern="/admin/**"
			access="hasRole('ROLE_ADMIN')" />

		<form-login login-page="/user/login"
			authentication-success-handler-ref="loginSuccess"
			default-target-url="/"
			authentication-failure-url="/user/login?error"
			username-parameter="username" password-parameter="password" />
		<logout logout-url="/user/logout" invalidate-session="true" />
		<!--해댕주소로오면 session이 지워지고 로그아웃이 진행됨 -->
		<access-denied-handler error-page="/user/error" />
	</http>
	<!-- provider -->
	<authentication-manager>
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"
				users-by-username-query="SELECT username, password, 'true' as enabled FROM users WHERE username = ?"
				authorities-by-username-query="SELECT username, authority FROM authorities WHERE username = ?" />
			<!-- Set the password encoder for the jdbc-user-service -->
			<password-encoder ref="bcryptPasswordEncoder" />
		</authentication-provider>
	</authentication-manager>

</beans:beans>
